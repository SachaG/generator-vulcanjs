{"version":3,"sources":["../../src/generators/package/index.js"],"names":["chalk","require","path","VulcanGenerator","common","module","exports","initializing","_assertIsVulcan","inputProps","prompting","_canPrompt","questions","_getPackageNameInputQuestion","type","name","message","messages","vulcanDependencies","choices","checked","when","prompt","then","answers","preProcessedDeps","props","packageName","_filterPackageName","map","dep","isPackageAutoAdd","_assertNotPackageExists","configuring","_canConfigure","_dispatch","_commitStore","_writePackageJs","fs","copyTpl","templatePath","_getPackagePath","_writeClientMain","_getClientPath","_writeServerMain","_getServerPath","_writeServerSeed","_writeModulesIndex","_getModulesPath","_writeRoutes","_writeStoriesJs","_getComponentsPath","writing","_canWrite","end","_end","_hasNoErrors","log","green"],"mappings":"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","file":"index.js","sourcesContent":["const chalk = require('chalk');\nconst path = require('path');\nconst VulcanGenerator = require('../../lib/VulcanGenerator');\nconst common = require('../../lib/common');\n\nmodule.exports = class extends VulcanGenerator {\n\n  initializing () {\n    this._assertIsVulcan();\n    this.inputProps = {};\n  }\n\n  prompting () {\n    if (!this._canPrompt()) { return false; }\n    const questions = [\n      this._getPackageNameInputQuestion(),\n      {\n        type: 'checkbox',\n        name: 'vulcanDependencies',\n        message: common.messages.vulcanDependencies,\n        choices: [\n          { name: 'vulcan:core', checked: true },\n          'vulcan:posts',\n          'vulcan:comments',\n          'vulcan:newsletter',\n          'vulcan:notifications',\n          'vulcan:getting-started',\n          'vulcan:categories',\n          'vulcan:voting',\n          'vulcan:embedly',\n          'vulcan:api',\n          'vulcan:rss',\n          'vulcan:subscribe',\n        ],\n        when: () => (!this.inputProps.vulcanDependencies),\n      },\n      // this._getIsPackageAutoAddQuestion(),\n    ];\n\n    return this.prompt(questions).then((answers) => {\n      const preProcessedDeps =\n        this.inputProps.vulcanDependencies ||\n        answers.vulcanDependencies;\n      this.props = {\n        packageName: this._filterPackageName(this.inputProps.packageName || answers.packageName),\n        vulcanDependencies: preProcessedDeps.map((dep) => (`'${dep}'`)),\n        isPackageAutoAdd: this.inputProps.isPackageAutoAdd || answers.isPackageAutoAdd,\n      };\n      this._assertNotPackageExists(this.props.packageName);\n    });\n  }\n\n  configuring () {\n    if (!this._canConfigure()) { return; }\n    this._dispatch({\n      type: 'ADD_PACKAGE',\n      packageName: this.props.packageName,\n    });\n    this._commitStore();\n  }\n\n  _writePackageJs () {\n    this.fs.copyTpl(\n      this.templatePath('package.js'),\n      this._getPackagePath('package.js'),\n      this.props\n    );\n  }\n\n  _writeClientMain () {\n    this.fs.copyTpl(\n      this.templatePath('client.js'),\n      this._getClientPath('main.js'),\n      this.props\n    );\n  }\n\n  _writeServerMain () {\n    this.fs.copyTpl(\n      this.templatePath('server.js'),\n      this._getServerPath('main.js'),\n      this.props\n    );\n  }\n\n  _writeServerSeed () {\n    this.fs.copyTpl(\n      this.templatePath('seed.js'),\n      this._getServerPath('seed.js'),\n      this.props\n    );\n  }\n\n  _writeModulesIndex () {\n    this.fs.copyTpl(\n      this.templatePath('module.js'),\n      this._getModulesPath('index.js'),\n      this.props\n    );\n  }\n\n  _writeRoutes () {\n    this.fs.copyTpl(\n      this.templatePath('routes.js'),\n      this._getModulesPath('routes.js'),\n      this.props\n    );\n  }\n\n  _writeStoriesJs () {\n    this.fs.copyTpl(\n      this.templatePath('stories.js'),\n      this._getComponentsPath('stories.js'),\n      this.props\n    );\n  }\n\n  writing () {\n    if (!this._canWrite()) { return; }\n    this._writePackageJs();\n    this._writeClientMain();\n    this._writeServerMain();\n    this._writeServerSeed();\n    this._writeModulesIndex();\n    this._writeRoutes();\n    this._writeStoriesJs();\n  }\n\n  end () {\n    this._end();\n    if (!this._hasNoErrors()) { return; }\n    this.log(`\\nTo activate your package, run: ${chalk.green(`meteor add ${this.props.packageName}`)}`);\n  }\n};\n"]}