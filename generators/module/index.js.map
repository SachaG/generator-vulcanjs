{"version":3,"sources":["../../src/generators/module/index.js"],"names":["path","require","pascalCase","camelCase","VulcanGenerator","getSetFromArr","arr","set","forEach","elem","module","exports","initializing","_assertIsVulcan","_assertHasNonZeroPackages","inputProps","prompting","_canPrompt","questions","_getPackageNameListQuestion","_getModuleNameInputQuestion","type","name","message","choices","value","checked","disabled","when","moduleParts","filter","answers","defaultResolvers","resolvers","prompt","then","packageName","_filterPackageName","moduleName","_filterModuleName","camelModuleName","pascalModuleName","props","collectionName","typeName","newMutationName","newPermission","editMutationName","editOwnPermission","editAllPermission","removeMutationName","removeOwnPermission","removeAllPermission","parametersName","listResolverName","singleResolverName","totalResolverName","hasListResolver","list","hasSingleResolver","single","hasTotalResolver","total","_assertIsPackageExists","_assertModuleNotExists","configuring","_canConfigure","_dispatch","_commitStore","_writeCollection","fs","copyTpl","templatePath","join","_getModulePath","_writeResolvers","_writeFragments","fragments","isAbsolute","_writeMutations","mutations","_writeParameters","parameters","_writePermissions","permissions","_writeSchema","schema","_updateModulesIndex","modulePath","_getModulesPath","file","read","newFile","write","writing","_canWrite","end","_end"],"mappings":"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","file":"index.js","sourcesContent":["const path = require('path');\nconst pascalCase = require('pascal-case');\nconst camelCase = require('camelcase');\nconst VulcanGenerator = require('../../lib/VulcanGenerator');\n\nfunction getSetFromArr (arr) {\n  const set = {};\n  arr.forEach((elem) => {\n    set[elem] = true;\n  });\n  return set;\n}\n\nmodule.exports = class extends VulcanGenerator {\n  initializing () {\n    this._assertIsVulcan();\n    this._assertHasNonZeroPackages();\n    this.inputProps = {};\n  }\n\n  prompting () {\n    if (!this._canPrompt()) { return false; }\n    const questions = [\n      this._getPackageNameListQuestion(),\n      this._getModuleNameInputQuestion(),\n      {\n        type: 'checkbox',\n        name: 'moduleParts',\n        message: 'Create with',\n        choices: [\n          { name: 'Collection', value: 'collection', checked: true, disabled: true },\n          { name: 'Fragments', value: 'fragments', checked: true },\n          { name: 'Mutations', value: 'mutations', checked: true },\n          { name: 'Parameters', value: 'parameters', checked: true },\n          { name: 'Permissions', value: 'permissions', checked: true },\n          { name: 'Resolvers', value: 'resolvers', checked: true },\n          { name: 'Schema', value: 'schema', checked: true },\n        ],\n        when: () => (!this.inputProps.moduleParts),\n        filter: getSetFromArr,\n      },\n      {\n        type: 'checkbox',\n        name: 'defaultResolvers',\n        message: 'Default Resolvers',\n        choices: [\n          { name: 'List', value: 'list', checked: true },\n          { name: 'Single', value: 'single', checked: true },\n          { name: 'Total', value: 'total', checked: true },\n        ],\n        when: (answers) => (\n          !this.inputProps.defaultResolvers &&\n          answers.moduleParts.resolvers\n        ),\n        filter: getSetFromArr,\n      },\n    ];\n\n    return this.prompt(questions)\n    .then((answers) => {\n      const packageName = this._filterPackageName(\n        this.inputProps.packageName ||\n        answers.packageName\n      );\n      const moduleName = this._filterModuleName(this.inputProps.moduleName || answers.moduleName);\n      const camelModuleName = camelCase(moduleName);\n      const pascalModuleName = pascalCase(moduleName);\n      this.props = {\n        packageName,\n        moduleName,\n        collectionName: pascalModuleName,\n        typeName: pascalModuleName,\n        newMutationName: `${camelModuleName}New`,\n        newPermission: `${camelModuleName}.new`,\n        editMutationName: `${camelModuleName}Edit`,\n        editOwnPermission: `${camelModuleName}.edit.own`,\n        editAllPermission: `${camelModuleName}.edit.all`,\n        removeMutationName: `${camelModuleName}Remove`,\n        removeOwnPermission: `${camelModuleName}.remove.own`,\n        removeAllPermission: `${camelModuleName}.remove.all`,\n        parametersName: `${camelModuleName}.parameters`,\n        listResolverName: `${camelModuleName}List`,\n        singleResolverName: `${camelModuleName}Single`,\n        totalResolverName: `${camelModuleName}Total`,\n        moduleParts: this.inputProps.moduleParts || answers.moduleParts,\n      };\n\n      if (this.props.moduleParts.resolvers) {\n        const defaultResolvers = this.inputProps.defaultResolvers || answers.defaultResolvers;\n        this.props.hasListResolver = defaultResolvers.list;\n        this.props.hasSingleResolver = defaultResolvers.single;\n        this.props.hasTotalResolver = defaultResolvers.total;\n      }\n      this._assertIsPackageExists(this.props.packageName);\n      this._assertModuleNotExists(this.props.packageName, this.props.moduleName);\n    });\n  }\n\n  configuring () {\n    if (!this._canConfigure()) { return; }\n    this._dispatch({\n      type: 'ADD_MODULE',\n      packageName: this.props.packageName,\n      moduleName: this.props.moduleName,\n    });\n    this._commitStore();\n  }\n\n  _writeCollection () {\n    this.fs.copyTpl(\n      this.templatePath('collection.js'),\n      path.join(\n        this._getModulePath(),\n        'collection.js'\n      ),\n      this.props\n    );\n  }\n\n  _writeResolvers () {\n    if (!this.props.moduleParts.resolvers) { return; }\n    this.fs.copyTpl(\n      this.templatePath('resolvers.js'),\n      this._getModulePath('resolvers.js'),\n      this.props\n    );\n  }\n\n  _writeFragments () {\n    if (!this.props.moduleParts.fragments) { return; }\n    this.fs.copyTpl(\n      this.templatePath('fragments.js'),\n      this._getModulePath({ isAbsolute: true }, 'fragments.js'),\n      this.props\n    );\n  }\n\n  _writeMutations () {\n    if (!this.props.moduleParts.mutations) { return; }\n    this.fs.copyTpl(\n      this.templatePath('mutations.js'),\n      this._getModulePath({ isAbsolute: true }, 'mutations.js'),\n      this.props\n    );\n  }\n\n  _writeParameters () {\n    if (!this.props.moduleParts.parameters) { return; }\n    this.fs.copyTpl(\n      this.templatePath('parameters.js'),\n      this._getModulePath({ isAbsolute: true }, 'parameters.js'),\n      this.props\n    );\n  }\n\n  _writePermissions () {\n    if (!this.props.moduleParts.permissions) { return; }\n    this.fs.copyTpl(\n      this.templatePath('permissions.js'),\n      this._getModulePath({ isAbsolute: true }, 'permissions.js'),\n      this.props\n    );\n  }\n\n  _writeSchema () {\n    if (!this.props.moduleParts.schema) { return; }\n    this.fs.copyTpl(\n      this.templatePath('schema.js'),\n      this._getModulePath({ isAbsolute: true }, 'schema.js'),\n      this.props\n    );\n  }\n\n  _updateModulesIndex () {\n    const modulePath = this._getModulesPath({ isAbsolute: true }, 'index.js');\n    const file = this.fs.read(modulePath);\n    const newFile = `import './${this.props.moduleName}/collection.js'; ${file}`;\n    this.fs.write(\n      modulePath,\n      newFile\n    );\n  }\n\n  writing () {\n    if (!this._canWrite()) { return; }\n    this._writeCollection();\n    this._writeResolvers();\n    this._writeFragments();\n    this._writeMutations();\n    this._writeParameters();\n    this._writePermissions();\n    this._writeSchema();\n    this._updateModulesIndex();\n  }\n\n  end () {\n    this._end();\n  }\n};\n"]}